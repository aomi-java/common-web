ext.'signing.keyId' = System.getenv('SIGNING_KEY_ID')
ext.'signing.password' = System.getenv('SIGNING_PASSWORD')
ext.'signing.secretKeyRingFile' = System.getenv('SIGNING_SECRET_KEY_RING_FILE')

ext.'ossrhUsername' = System.getenv('OSSRH_USERNAME')
ext.'ossrhPassword' = System.getenv('OSSRH_PASSWORD')

apply plugin: 'maven-publish'
apply plugin: 'signing'

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
    classifier "sources"
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            // The coordinates of the library, being set from variables that
            // we'll set up in a moment
            groupId project.group
            artifactId project.name
            version project.version
            //如果是war包填写components.web，如果是jar包填写components.java
            from components.java
            artifact sourceJar

            // Self-explanatory metadata for the most part
            pom {
                name = project.name
                description 'Aomi Tech 公共模块 - web'
                // If your project has a dedicated site, use its URL here
                url = 'https://github.com/aomi-java/common-web'
                licenses {
                    license {
                        //协议类型，一般默认Apache License2.0的话不用改：
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'aomitech'
                        name = 'Aomi Tech'
                        email = 'aomi.tech@outlook.com'
                    }
                }
                // Version control info, if you're using GitHub, follow the format as seen here
                scm {
                    //分支地址：
                    url = 'https://github.com/aomi-java/common-web/tree/main'
                    //修改成你的Git地址：
                    connection = 'scm:git:github.com/aomi-java/common-web.git'
                    developerConnection = 'scm:git:ssh://github.com/aomi-java/common-web.git'
                }
                // A slightly hacky fix so that your POM will include any transitive dependencies
                // that your library builds upon
                withXml {
                    def dependenciesNode = asNode().appendNode('dependencies')

                    project.configurations.implementation.allDependencies.each {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }
    repositories {
        maven {
            // This is an arbitrary name, you may also use "mavencentral" or
            // any other name that's descriptive for you
            name = "mavenCentral"

            def releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
            // You only need this if you want to publish snapshots, otherwise just set the URL
            // to the release repo directly
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl

            //认证用户和密码
            credentials {
                username ossrhUsername
                password ossrhPassword
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}